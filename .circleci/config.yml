version: 2
jobs:
  build_and_test:
    working_directory: ~/report_a_defect
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            rm get-docker.sh
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Run the tests
          command: |
            bin/dtest-server ci
            bin/dspec
      - run:
          name: Make a cache
          command: mkdir -p /cache
      - run:
          name: Save the tested Docker image for deployment
          command: |
            docker tag reportadefect_test:latest reportadefect:$CIRCLE_SHA1
            docker image save -o /cache/built-image.tar reportadefect:$CIRCLE_SHA1
            docker image load --input /cache/built-image.tar
      - run:
          name: Save the application for deployment
          command: |
            cp -rT . /cache/report-a-defect
      - save_cache:
          key: docker-images-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /cache/report-a-defect
            - /cache/built-image.tar

  deploy_staging:
    working_directory: ~/report_a_defect
    docker:
      - image: buildpack-deps:trusty
    steps:
      - restore_cache:
          keys:
            - docker-images-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run:
          name: Install Docker
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            rm get-docker.sh
      - run:
          name: Login to Docker
          command: docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
      - run:
          name: Setup Heroku
          command: |
            cd /cache/report-a-defect
            git init
            git push -f https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_STAGING.git develop:master
            chmod +x .circleci/setup-heroku.sh
            .circleci/setup-heroku.sh
      - run:
          name: Deploy the Docker image to Heroku Production
          command: |
            docker image load --input /cache/built-image.tar
            docker tag reportadefect:$CIRCLE_SHA1 registry.heroku.com/$HEROKU_APP_NAME_STAGING/web
            docker push registry.heroku.com/$HEROKU_APP_NAME_STAGING/web
            heroku container:release web --app $HEROKU_APP_NAME_STAGING
            heroku container:release worker --app $HEROKU_APP_NAME_STAGING

  deploy_production:
    working_directory: ~/report_a_defect
    docker:
      - image: buildpack-deps:trusty
    steps:
      - restore_cache:
          keys:
            - docker-images-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run:
          name: Install Docker
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            rm get-docker.sh
      - run:
          name: Login to Docker
          command: docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
      - run:
          name: Setup Heroku
          command: |
            cd /cache/report-a-defect
            git init
            git push -f https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PRODUCTION.git master:master
            chmod +x .circleci/setup-heroku.sh
            .circleci/setup-heroku.sh
      - run:
          name: Deploy the Docker image to Heroku Production
          command: |
            docker image load --input /cache/built-image.tar
            docker tag reportadefect:$CIRCLE_SHA1 registry.heroku.com/$HEROKU_APP_NAME_PRODUCTION/web
            docker push registry.heroku.com/$HEROKU_APP_NAME_PRODUCTION/web
            heroku container:release web --app $HEROKU_APP_NAME_PRODUCTION
            heroku container:release worker --app $HEROKU_APP_NAME_PRODUCTION

workflows:
  version: 2
  continuous_delivery:
    jobs:
      - build_and_test
      - deploy_staging:
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - develop
      - deploy_production:
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - master
